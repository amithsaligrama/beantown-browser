{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salig\\\\OneDrive\\\\Documents\\\\CascadeProjects\\\\windsurf-project\\\\boston-location-game\\\\src\\\\components\\\\Game.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Remove the default icon warning\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst LAUNCH_DATE = new Date('2025-07-11T00:00:00Z');\nconst Game = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const mapRef = useRef(null);\n  const [userPosition, setUserPosition] = useState(null); // last guess\n  const [guesses, setGuesses] = useState([]); // {latlng, distance}\n\n  const [distance, setDistance] = useState(null);\n  const [feedback, setFeedback] = useState(''); // textual hint\n  const [imageExpanded, setImageExpanded] = useState(false);\n  const [countdown, setCountdown] = useState('');\n  const [revealAnswer, setRevealAnswer] = useState(false);\n  const [shareCopied, setShareCopied] = useState(false);\n  const dayIndex = Math.floor((Date.now() - LAUNCH_DATE.getTime()) / 86400000);\n  const storageKey = `btb-state-${dayIndex}`;\n  useEffect(() => {\n    document.title = 'Beantown Browser';\n  }, []);\n  const ClickHandler = () => {\n    _s();\n    useMapEvents({\n      click: e => {\n        if (!revealAnswer) {\n          handleMapClick(e);\n        }\n      }\n    });\n    return null;\n  };\n  _s(ClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  const fetchDailyLocation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/get-location');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setCurrentLocation(data);\n      setUserPosition(null);\n      setGuesses([]);\n      setFeedback('');\n      setDistance(null);\n      setRevealAnswer(false);\n      // reset map view\n      if (mapRef.current) {\n        mapRef.current.setView([42.3601, -71.0589], 13);\n      }\n    } catch (error) {\n      console.error('Error fetching location:', error);\n    }\n  };\n\n  /* ----- persistence effects ----- */\n  // restore saved state for today\n  useEffect(() => {\n    const raw = localStorage.getItem(storageKey);\n    if (raw) {\n      try {\n        const saved = JSON.parse(raw);\n        if (saved) {\n          setGuesses(saved.guesses || []);\n          setDistance(saved.distance || null);\n          setFeedback(saved.feedback || '');\n          setRevealAnswer(saved.revealAnswer || false);\n        }\n      } catch (e) {\n        console.error('Failed to parse saved state', e);\n      }\n    }\n  }, [storageKey]);\n\n  // save whenever relevant state changes\n  useEffect(() => {\n    const payload = {\n      guesses,\n      distance,\n      feedback,\n      revealAnswer\n    };\n    localStorage.setItem(storageKey, JSON.stringify(payload));\n  }, [guesses, distance, feedback, revealAnswer, storageKey]);\n\n  /* ----- effects ----- */\n  useEffect(() => {\n    // initial fetch\n    fetchDailyLocation();\n  }, []);\n  useEffect(() => {\n    const updateCountdown = () => {\n      const now = new Date();\n      const next = new Date();\n      next.setHours(24, 0, 0, 0);\n      const diff = next - now;\n      const h = String(Math.floor(diff / 3600000)).padStart(2, '0');\n      const m = String(Math.floor(diff % 3600000 / 60000)).padStart(2, '0');\n      const s = String(Math.floor(diff % 60000 / 1000)).padStart(2, '0');\n      setCountdown(`${h}:${m}:${s}`);\n    };\n    updateCountdown();\n    const id = setInterval(updateCountdown, 1000);\n    return () => clearInterval(id);\n  }, []);\n  const shareSymbols = {\n    blue: '🟦',\n    yellow: '🟨',\n    orange: '🟧',\n    red: '🟥',\n    green: '🟩'\n  };\n  const arrowFromDir = {\n    'north': '⬆️',\n    'south': '⬇️',\n    'east': '➡️',\n    'west': '⬅️',\n    'north-east': '↗️',\n    'north-west': '↖️',\n    'south-east': '↘️',\n    'south-west': '↙️',\n    '': '⬜'\n  };\n  const handleShare = () => {\n    const todayIndex = Math.floor((Date.now() - LAUNCH_DATE.getTime()) / 86400000);\n    let text = `Beantown Browser #${todayIndex}\\nWhere do you think this picture was taken?\\n`;\n    guesses.forEach((g, idx) => {\n      const color = getColor(g.distance);\n      const sym = shareSymbols[color] || '⬜';\n      const dir = directionFromGuess({\n        lat: currentLocation.lat,\n        lng: currentLocation.lng\n      }, g.latlng);\n      const arrow = revealAnswer && idx === guesses.length - 1 && distance <= WIN_THRESHOLD_KM ? '' : arrowFromDir[dir] || '';\n      text += `${sym}${arrow}\\n`;\n    });\n    if (distance !== null) {\n      text += `\\nI was ${formatDistance(distance)} away.`;\n    }\n    text += '\\nhttps://beantownbrowser.com';\n    navigator.clipboard.writeText(text).then(() => setShareCopied(true));\n  };\n  const MAX_GUESSES = 5;\n  const WIN_THRESHOLD_KM = 0.1524; // 500 ft ≈ 0.1524 km\n\n  const directionFromGuess = (target, guess) => {\n    const latDiff = target.lat - guess.lat;\n    const lngDiff = target.lng - guess.lng;\n    const absLat = Math.abs(latDiff);\n    const absLng = Math.abs(lngDiff);\n    const THRESH = 0.0003; // ~30 m\n    // If both differences are tiny, user is very close\n    if (absLat < THRESH && absLng < THRESH) return 'very close';\n\n    // Decide dominant axis. If one axis difference is 1.5× the other, prefer that axis only.\n    const dominantLat = absLat > absLng * 1.5;\n    const dominantLng = absLng > absLat * 1.5;\n    let parts = [];\n    if (!dominantLng && absLat >= THRESH) parts.push(latDiff > 0 ? 'north' : 'south');\n    if (!dominantLat && absLng >= THRESH) parts.push(lngDiff > 0 ? 'east' : 'west');\n    return parts.join('-');\n  };\n  const getColor = km => {\n    if (km === null || km === undefined) return 'gray';\n    if (km <= WIN_THRESHOLD_KM) return 'green'; // correct within 500 ft\n    if (km <= 0.3) return 'red'; // very close (< 0.3 km ~ 1000 ft)\n    if (km <= 1) return 'orange'; // closer (< 1 km)\n    if (km <= 2) return 'yellow'; // less far (< 2 km)\n    return 'blue'; // far\n  };\n  const memoizedIcons = {};\n  const getIcon = color => {\n    if (memoizedIcons[color]) return memoizedIcons[color];\n    memoizedIcons[color] = L.divIcon({\n      className: 'custom-marker',\n      html: `<div style=\"background:${color};width:16px;height:16px;border-radius:50%;border:2px solid white\"></div>`\n    });\n    return memoizedIcons[color];\n  };\n  const formatDistance = km => {\n    const miles = km * 0.621371;\n    if (miles >= 1) return `${miles.toFixed(2)} miles`;\n    const feet = km * 3280.84;\n    return `${Math.round(feet)} ft`;\n  };\n  const handleMapClick = e => {\n    if (revealAnswer || guesses.length >= MAX_GUESSES) return;\n    setUserPosition(e.latlng);\n    const guessIdx = guesses.length;\n    setGuesses(prev => [...prev, {\n      latlng: e.latlng,\n      distance: null\n    }]);\n    if (currentLocation) {\n      fetch('http://localhost:5000/api/check-distance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          target_lat: currentLocation.lat,\n          target_lng: currentLocation.lng,\n          user_lat: e.latlng.lat,\n          user_lng: e.latlng.lng\n        })\n      }).then(res => res.json()).then(data => {\n        // update distance for this guess\n        setGuesses(prev => prev.map((g, i) => i === guessIdx ? {\n          ...g,\n          distance: data.distance\n        } : g));\n        if (data.distance <= WIN_THRESHOLD_KM) {\n          setDistance(data.distance);\n          setFeedback('Correct!');\n          setRevealAnswer(true);\n        } else if (guesses.length + 1 >= MAX_GUESSES) {\n          setDistance(data.distance);\n          setFeedback('Out of guesses! Revealing answer.');\n          setRevealAnswer(true);\n        } else {\n          const dir = directionFromGuess({\n            lat: currentLocation.lat,\n            lng: currentLocation.lng\n          }, e.latlng);\n          setFeedback(`Try a bit more ${dir}.`);\n        }\n      }).catch(err => console.error('Error checking distance:', err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Beantown Browser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown\",\n        children: [\"Next puzzle in \", countdown]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), feedback && !revealAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hint-overlay\",\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      whenCreated: map => {\n        mapRef.current = map;\n      },\n      center: [42.3601, -71.0589],\n      zoom: 13,\n      style: {\n        height: '100vh',\n        width: '100vw'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ClickHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), revealAnswer && currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [currentLocation.lat, currentLocation.lng],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: currentLocation.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), guesses.map((g, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: g.latlng,\n        icon: getIcon(getColor(g.distance)),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [`Guess #${idx + 1}`, revealAnswer && g.distance !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Distance: \", formatDistance(g.distance)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)), revealAnswer && userPosition && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: [userPosition, [currentLocation.lat, currentLocation.lng]],\n        pathOptions: {\n          color: 'red',\n          dashArray: '6'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), currentLocation && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!imageExpanded && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentLocation.image,\n        alt: \"location thumbnail\",\n        className: \"thumbnail-img\",\n        onClick: () => setImageExpanded(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this), imageExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-overlay\",\n        onClick: () => setImageExpanded(false),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentLocation.image,\n          alt: \"location\",\n          onClick: e => e.stopPropagation()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), revealAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distance-info\",\n      style: {\n        marginTop: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), distance !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You were \", formatDistance(distance), \" away\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShare,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), shareCopied && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: '8px'\n        },\n        children: \"Copied!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s2(Game, \"Ibow7djKJsUDd41OhZK+E75UW58=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Popup","Polyline","useMapEvents","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","LAUNCH_DATE","Date","Game","_s2","_s","$RefreshSig$","currentLocation","setCurrentLocation","mapRef","userPosition","setUserPosition","guesses","setGuesses","distance","setDistance","feedback","setFeedback","imageExpanded","setImageExpanded","countdown","setCountdown","revealAnswer","setRevealAnswer","shareCopied","setShareCopied","dayIndex","Math","floor","now","getTime","storageKey","document","title","ClickHandler","click","e","handleMapClick","fetchDailyLocation","response","fetch","ok","Error","data","json","current","setView","error","console","raw","localStorage","getItem","saved","JSON","parse","payload","setItem","stringify","updateCountdown","next","setHours","diff","h","String","padStart","m","s","id","setInterval","clearInterval","shareSymbols","blue","yellow","orange","red","green","arrowFromDir","handleShare","todayIndex","text","forEach","g","idx","color","getColor","sym","dir","directionFromGuess","lat","lng","latlng","arrow","length","WIN_THRESHOLD_KM","formatDistance","navigator","clipboard","writeText","then","MAX_GUESSES","target","guess","latDiff","lngDiff","absLat","abs","absLng","THRESH","dominantLat","dominantLng","parts","push","join","km","undefined","memoizedIcons","getIcon","divIcon","className","html","miles","toFixed","feet","round","guessIdx","prev","method","headers","body","target_lat","target_lng","user_lat","user_lng","res","map","i","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","whenCreated","center","zoom","style","height","width","url","attribution","position","name","icon","positions","pathOptions","dashArray","src","image","alt","onClick","stopPropagation","marginTop","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/salig/OneDrive/Documents/CascadeProjects/windsurf-project/boston-location-game/src/components/Game.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Remove the default icon warning\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst LAUNCH_DATE = new Date('2025-07-11T00:00:00Z');\n\nconst Game = () => {\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const mapRef = useRef(null);\n  const [userPosition, setUserPosition] = useState(null); // last guess\n  const [guesses, setGuesses] = useState([]); // {latlng, distance}\n\n  const [distance, setDistance] = useState(null);\n  \n  const [feedback, setFeedback] = useState(''); // textual hint\n  const [imageExpanded, setImageExpanded] = useState(false);\n  const [countdown, setCountdown] = useState('');\n  const [revealAnswer, setRevealAnswer] = useState(false);\n  const [shareCopied, setShareCopied] = useState(false);\n\n  const dayIndex = Math.floor((Date.now() - LAUNCH_DATE.getTime())/86400000);\n  const storageKey = `btb-state-${dayIndex}`;\n\n  useEffect(()=>{document.title = 'Beantown Browser';},[]);\n\n  const ClickHandler = () => {\n    useMapEvents({\n      click: (e) => {\n        if (!revealAnswer) {\n          handleMapClick(e);\n        }\n      },\n    });\n    return null;\n  };\n\n  const fetchDailyLocation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/get-location');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setCurrentLocation(data);\n      \n      setUserPosition(null);\n      setGuesses([]);\n      setFeedback('');\n      setDistance(null);\n      setRevealAnswer(false);\n      // reset map view\n      if (mapRef.current) {\n        mapRef.current.setView([42.3601, -71.0589], 13);\n      }\n    } catch (error) {\n      console.error('Error fetching location:', error);\n    }\n  };\n\n  /* ----- persistence effects ----- */\n  // restore saved state for today\n  useEffect(()=>{\n    const raw = localStorage.getItem(storageKey);\n    if(raw){\n      try{\n        const saved = JSON.parse(raw);\n        if(saved){\n          setGuesses(saved.guesses||[]);\n          setDistance(saved.distance||null);\n          setFeedback(saved.feedback||'');\n          setRevealAnswer(saved.revealAnswer||false);\n        }\n      }catch(e){console.error('Failed to parse saved state',e);}\n    }\n  },[storageKey]);\n\n  // save whenever relevant state changes\n  useEffect(()=>{\n    const payload = {guesses,distance,feedback,revealAnswer};\n    localStorage.setItem(storageKey, JSON.stringify(payload));\n  },[guesses,distance,feedback,revealAnswer,storageKey]);\n\n  /* ----- effects ----- */\n  useEffect(()=>{\n    // initial fetch\n    fetchDailyLocation();\n  },[]);\n\n  useEffect(()=>{\n    const updateCountdown = ()=>{\n      const now = new Date();\n      const next = new Date();\n      next.setHours(24,0,0,0);\n      const diff = next - now;\n      const h = String(Math.floor(diff/3600000)).padStart(2,'0');\n      const m = String(Math.floor((diff%3600000)/60000)).padStart(2,'0');\n      const s = String(Math.floor((diff%60000)/1000)).padStart(2,'0');\n      setCountdown(`${h}:${m}:${s}`);\n    };\n    updateCountdown();\n    const id=setInterval(updateCountdown,1000);\n    return ()=>clearInterval(id);\n  },[]);\n\n  const shareSymbols = {\n    blue:'🟦', yellow:'🟨', orange:'🟧', red:'🟥', green:'🟩'\n  };\n  const arrowFromDir = {\n    'north':'⬆️','south':'⬇️','east':'➡️','west':'⬅️',\n    'north-east':'↗️','north-west':'↖️','south-east':'↘️','south-west':'↙️','':'⬜'\n  };\n\n  const handleShare = () => {\n    const todayIndex = Math.floor((Date.now() - LAUNCH_DATE.getTime())/86400000);\n    let text = `Beantown Browser #${todayIndex}\\nWhere do you think this picture was taken?\\n`;\n    guesses.forEach((g,idx)=>{\n      const color = getColor(g.distance);\n      const sym = shareSymbols[color]||'⬜';\n      const dir = directionFromGuess({lat:currentLocation.lat,lng:currentLocation.lng}, g.latlng);\n      const arrow = revealAnswer && idx===guesses.length-1 && distance<=WIN_THRESHOLD_KM? '' : (arrowFromDir[dir]||'');\n      text += `${sym}${arrow}\\n`;\n    });\n    if(distance!==null){\n      text += `\\nI was ${formatDistance(distance)} away.`;\n    }\n    text += '\\nhttps://beantownbrowser.com';\n    navigator.clipboard.writeText(text).then(()=> setShareCopied(true));\n  };\n\n  const MAX_GUESSES = 5;\n  const WIN_THRESHOLD_KM = 0.1524; // 500 ft ≈ 0.1524 km\n\n  const directionFromGuess = (target, guess) => {\n    const latDiff = target.lat - guess.lat;\n    const lngDiff = target.lng - guess.lng;\n    const absLat = Math.abs(latDiff);\n    const absLng = Math.abs(lngDiff);\n    const THRESH = 0.0003; // ~30 m\n    // If both differences are tiny, user is very close\n    if (absLat < THRESH && absLng < THRESH) return 'very close';\n\n    // Decide dominant axis. If one axis difference is 1.5× the other, prefer that axis only.\n    const dominantLat = absLat > absLng * 1.5;\n    const dominantLng = absLng > absLat * 1.5;\n\n    let parts = [];\n    if (!dominantLng && absLat >= THRESH) parts.push(latDiff > 0 ? 'north' : 'south');\n    if (!dominantLat && absLng >= THRESH) parts.push(lngDiff > 0 ? 'east' : 'west');\n\n    return parts.join('-');\n  };\n\n  const getColor = (km) => {\n    if (km === null || km === undefined) return 'gray';\n    if (km <= WIN_THRESHOLD_KM) return 'green'; // correct within 500 ft\n    if (km <= 0.3) return 'red';          // very close (< 0.3 km ~ 1000 ft)\n    if (km <= 1)   return 'orange';       // closer (< 1 km)\n    if (km <= 2)   return 'yellow';       // less far (< 2 km)\n    return 'blue';                        // far\n  };\n  \n\n  const memoizedIcons = {};\n  const getIcon = (color) => {\n    if (memoizedIcons[color]) return memoizedIcons[color];\n    memoizedIcons[color] = L.divIcon({\n      className: 'custom-marker',\n      html: `<div style=\"background:${color};width:16px;height:16px;border-radius:50%;border:2px solid white\"></div>`\n    });\n    return memoizedIcons[color];\n  };\n\n  const formatDistance = (km) => {\n    const miles = km * 0.621371;\n    if (miles >= 1) return `${miles.toFixed(2)} miles`;\n    const feet = km * 3280.84;\n    return `${Math.round(feet)} ft`;\n  };\n\n  const handleMapClick = (e) => {\n    if (revealAnswer || guesses.length >= MAX_GUESSES) return;\n    setUserPosition(e.latlng);\n    const guessIdx = guesses.length;\n    setGuesses(prev => [...prev, { latlng: e.latlng, distance: null }]);\n    \n    if (currentLocation) {\n            fetch('http://localhost:5000/api/check-distance', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          target_lat: currentLocation.lat,\n          target_lng: currentLocation.lng,\n          user_lat: e.latlng.lat,\n          user_lng: e.latlng.lng\n        })\n      })\n      .then(res => res.json())\n      .then(data => {\n        // update distance for this guess\n        setGuesses(prev => prev.map((g,i)=> i===guessIdx ? {...g, distance:data.distance}: g));\n\n        if (data.distance <= WIN_THRESHOLD_KM) {\n          setDistance(data.distance);\n          setFeedback('Correct!');\n          setRevealAnswer(true);\n        } else if (guesses.length + 1 >= MAX_GUESSES) {\n          setDistance(data.distance);\n          setFeedback('Out of guesses! Revealing answer.');\n          setRevealAnswer(true);\n        } else {\n          const dir = directionFromGuess({ lat: currentLocation.lat, lng: currentLocation.lng }, e.latlng);\n          setFeedback(`Try a bit more ${dir}.`);\n        }\n      })\n      .catch(err => console.error('Error checking distance:', err));\n\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-header\">\n        <h1>Beantown Browser</h1>\n        <div className=\"countdown\">Next puzzle in {countdown}</div>\n      </div>\n\n      {feedback && !revealAnswer && (\n        <div className=\"hint-overlay\">{feedback}</div>\n      )}\n\n      <MapContainer \n        whenCreated={(map)=>{mapRef.current = map;}}\n        center={[42.3601, -71.0589]} \n        zoom={13}\n        style={{ height: '100vh', width: '100vw' }}\n      >\n        <ClickHandler />\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        \n        {revealAnswer && currentLocation && (\n          <Marker position={[currentLocation.lat, currentLocation.lng]}>\n            <Popup>\n              {currentLocation.name}\n            </Popup>\n          </Marker>\n        )}\n\n        {guesses.map((g, idx) => (\n          <Marker key={idx} position={g.latlng} icon={getIcon(getColor(g.distance))}>\n            <Popup>\n              {`Guess #${idx + 1}`}\n              {revealAnswer && g.distance !== undefined && (\n                <p>Distance: {formatDistance(g.distance)}</p>\n              )}\n            </Popup>\n          </Marker>\n        ))}\n\n\n        {/* dashed line after game ends */}\n        {revealAnswer && userPosition && (\n          <Polyline\n            positions={[userPosition, [currentLocation.lat, currentLocation.lng]]}\n            pathOptions={{ color: 'red', dashArray: '6' }}\n          />\n        )}\n      </MapContainer>\n\n      {currentLocation && (\n        <>\n          {!imageExpanded && (\n            <img\n              src={currentLocation.image}\n              alt=\"location thumbnail\"\n              className=\"thumbnail-img\"\n              onClick={() => setImageExpanded(true)}\n            />\n          )}\n          {imageExpanded && (\n            <div className=\"img-overlay\" onClick={() => setImageExpanded(false)}>\n              <img\n                src={currentLocation.image}\n                alt=\"location\"\n                onClick={(e) => e.stopPropagation()}\n              />\n            </div>\n          )}\n        </>\n      )}\n\n      {revealAnswer && (\n        <div className=\"distance-info\" style={{ marginTop: '15px' }}>\n          <h3>{feedback}</h3>\n          {distance !== null && <p>You were {formatDistance(distance)} away</p>}\n          <button onClick={handleShare} style={{marginTop:'10px'}}>Share</button>\n          {shareCopied && <span style={{marginLeft:'8px'}}>Copied!</span>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}