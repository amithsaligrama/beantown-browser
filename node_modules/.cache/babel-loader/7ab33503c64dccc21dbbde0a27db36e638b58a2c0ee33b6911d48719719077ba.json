{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salig\\\\OneDrive\\\\Documents\\\\CascadeProjects\\\\windsurf-project\\\\boston-location-game\\\\src\\\\components\\\\Game.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMap, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Game.css';\n\n// Remove the default icon warning\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst Game = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [userPosition, setUserPosition] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [revealAnswer, setRevealAnswer] = useState(false);\n  const guessColor = dist => {\n    if (dist === null) return 'gray';\n    if (dist < 1) return '#2ecc71'; // green\n    if (dist < 5) return '#f1c40f'; // yellow\n    return '#e74c3c'; // red\n  };\n  const ClickHandler = () => {\n    _s();\n    const map = useMap();\n    useMapEvents({\n      click: handleMapClick\n    });\n\n    // zoom to fit markers when answer revealed\n    useEffect(() => {\n      if (revealAnswer && userPosition && currentLocation) {\n        const bounds = [userPosition, [currentLocation.lat, currentLocation.lng]];\n        map.fitBounds(bounds, {\n          padding: [40, 40]\n        });\n      }\n    }, [revealAnswer]);\n    return null;\n  };\n  _s(ClickHandler, \"zPCZ+3HeGH+H4qlX3OjKZcPqDaU=\", false, function () {\n    return [useMap, useMapEvents];\n  });\n  const fetchNewLocation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/get-location');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setCurrentLocation(data);\n      setGameStarted(true);\n      setUserPosition(null);\n      setDistance(null);\n      setRevealAnswer(false);\n    } catch (error) {\n      console.error('Error fetching location:', error);\n    }\n  };\n  const handleMapClick = e => {\n    if (revealAnswer) return; // guess already made\n    setUserPosition(e.latlng);\n    if (currentLocation) {\n      fetch('http://localhost:5000/api/check-distance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          target_lat: currentLocation.lat,\n          target_lng: currentLocation.lng,\n          user_lat: e.latlng.lat,\n          user_lng: e.latlng.lng\n        })\n      }).then(res => res.json()).then(data => {\n        setDistance(data.distance);\n        setRevealAnswer(true);\n      }).catch(err => console.error('Error checking distance:', err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Boston Location Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchNewLocation,\n        disabled: false,\n        children: gameStarted ? 'New Location' : 'Start Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-pane\",\n        children: currentLocation && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Find this location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentLocation.image,\n            alt: currentLocation.name,\n            referrerPolicy: \"no-referrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"hint-text\",\n            children: \"Click on the map to guess the location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-pane\",\n        children: [distance !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-info\",\n          children: [\"Your guess was \", distance, \" km away\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [42.3601, -71.0589],\n          zoom: 13,\n          style: {\n            height: '600px',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ClickHandler, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), revealAnswer && currentLocation && /*#__PURE__*/_jsxDEV(CircleMarker, {\n            center: [currentLocation.lat, currentLocation.lng],\n            radius: 10,\n            pathOptions: {\n              color: 'blue',\n              fillColor: 'blue',\n              fillOpacity: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), userPosition && /*#__PURE__*/_jsxDEV(CircleMarker, {\n            center: userPosition,\n            radius: 10,\n            pathOptions: {\n              color: guessColor(distance),\n              fillColor: guessColor(distance),\n              fillOpacity: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), revealAnswer && userPosition && /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: [userPosition, [currentLocation.lat, currentLocation.lng]],\n            pathOptions: {\n              color: guessColor(distance),\n              dashArray: '4'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s2(Game, \"8aQeI72/2sKPG0I89SAzbMBHkKo=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","CircleMarker","Polyline","useMap","useMapEvents","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Game","_s2","_s","$RefreshSig$","currentLocation","setCurrentLocation","userPosition","setUserPosition","distance","setDistance","gameStarted","setGameStarted","revealAnswer","setRevealAnswer","guessColor","dist","ClickHandler","map","click","handleMapClick","bounds","lat","lng","fitBounds","padding","fetchNewLocation","response","fetch","ok","Error","data","json","error","console","e","latlng","method","headers","body","JSON","stringify","target_lat","target_lng","user_lat","user_lng","then","res","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","src","image","alt","name","referrerPolicy","center","zoom","style","height","width","url","attribution","radius","pathOptions","color","fillColor","fillOpacity","positions","dashArray","_c","$RefreshReg$"],"sources":["C:/Users/salig/OneDrive/Documents/CascadeProjects/windsurf-project/boston-location-game/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, CircleMarker, Polyline, useMap, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './Game.css';\n\n\n// Remove the default icon warning\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst Game = () => {\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [userPosition, setUserPosition] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [revealAnswer, setRevealAnswer] = useState(false);\n\n  const guessColor = (dist) => {\n    if (dist === null) return 'gray';\n    if (dist < 1) return '#2ecc71'; // green\n    if (dist < 5) return '#f1c40f'; // yellow\n    return '#e74c3c'; // red\n  };\n\n  const ClickHandler = () => {\n    const map = useMap();\n    useMapEvents({\n      click: handleMapClick,\n    });\n\n    // zoom to fit markers when answer revealed\n    useEffect(() => {\n      if (revealAnswer && userPosition && currentLocation) {\n        const bounds = [userPosition, [currentLocation.lat, currentLocation.lng]];\n        map.fitBounds(bounds, { padding: [40, 40] });\n      }\n    }, [revealAnswer]);\n\n    return null;\n  };\n\n  const fetchNewLocation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/get-location');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setCurrentLocation(data);\n      setGameStarted(true);\n      setUserPosition(null);\n      setDistance(null);\n      setRevealAnswer(false);\n    } catch (error) {\n      console.error('Error fetching location:', error);\n    }\n  };\n\n  const handleMapClick = (e) => {\n    if (revealAnswer) return; // guess already made\n    setUserPosition(e.latlng);\n    \n    if (currentLocation) {\n            fetch('http://localhost:5000/api/check-distance', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          target_lat: currentLocation.lat,\n          target_lng: currentLocation.lng,\n          user_lat: e.latlng.lat,\n          user_lng: e.latlng.lng\n        })\n      })\n      .then(res => res.json())\n      .then(data => {\n        setDistance(data.distance);\n        setRevealAnswer(true);\n      })\n      .catch(err => console.error('Error checking distance:', err));\n\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-header\">\n        <h1>Boston Location Game</h1>\n        <button onClick={fetchNewLocation} disabled={false}>\n          {gameStarted ? 'New Location' : 'Start Game'}\n        </button>\n      </div>\n\n      <div className=\"play-area\">\n        <div className=\"image-pane\">\n          {currentLocation && (\n            <>\n              <h2 className=\"section-title\">Find this location</h2>\n              <img \n                src={currentLocation.image} \n                alt={currentLocation.name}\n                referrerPolicy=\"no-referrer\"\n              />\n              <p className=\"hint-text\">Click on the map to guess the location</p>\n            </>\n          )}\n        </div>\n        <div className=\"map-pane\">\n          {distance !== null && (\n            <div className=\"result-info\">\n              Your guess was {distance} km away\n            </div>\n          )}\n          <MapContainer \n            center={[42.3601, -71.0589]} \n            zoom={13}\n            style={{ height: '600px', width: '100%' }}\n          >\n            <ClickHandler />\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            {revealAnswer && currentLocation && (\n              <CircleMarker\n                center={[currentLocation.lat, currentLocation.lng]}\n                radius={10}\n                pathOptions={{ color: 'blue', fillColor: 'blue', fillOpacity: 1 }}\n              />\n            )}\n            {userPosition && (\n              <CircleMarker\n                center={userPosition}\n                radius={10}\n                pathOptions={{ color: guessColor(distance), fillColor: guessColor(distance), fillOpacity: 1 }}\n              />\n            )}\n            {revealAnswer && userPosition && (\n              <Polyline\n                positions={[userPosition, [currentLocation.lat, currentLocation.lng]]}\n                pathOptions={{ color: guessColor(distance), dashArray: '4' }}\n              />\n            )}\n          </MapContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}