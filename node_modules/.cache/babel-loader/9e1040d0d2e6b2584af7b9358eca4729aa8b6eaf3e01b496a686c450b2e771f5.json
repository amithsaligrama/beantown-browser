{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salig\\\\OneDrive\\\\Documents\\\\CascadeProjects\\\\windsurf-project\\\\boston-location-game\\\\src\\\\components\\\\Game.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Remove the default icon warning\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst Game = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [userPosition, setUserPosition] = useState(null); // last guess\n  const [guesses, setGuesses] = useState([]); // {latlng, distance}\n\n  const [distance, setDistance] = useState(null);\n  const [feedback, setFeedback] = useState(''); // textual hint\n  const [gameStarted, setGameStarted] = useState(false);\n  const [revealAnswer, setRevealAnswer] = useState(false);\n  const ClickHandler = () => {\n    _s();\n    useMapEvents({\n      click: e => {\n        if (!revealAnswer) {\n          handleMapClick(e);\n        }\n      }\n    });\n    return null;\n  };\n  _s(ClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  const fetchNewLocation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/get-location');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setCurrentLocation(data);\n      setGameStarted(true);\n      setUserPosition(null);\n      setGuesses([]);\n      setFeedback('');\n      setDistance(null);\n      setRevealAnswer(false);\n    } catch (error) {\n      console.error('Error fetching location:', error);\n    }\n  };\n  const MAX_GUESSES = 5;\n  const WIN_THRESHOLD_KM = 0.1524; // 500 ft â‰ˆ 0.1524 km\n\n  const directionFromGuess = (target, guess) => {\n    const latDiff = target.lat - guess.lat;\n    const lngDiff = target.lng - guess.lng;\n    let ns = '',\n      ew = '';\n    if (Math.abs(latDiff) > 0.0003) ns = latDiff > 0 ? 'north' : 'south';\n    if (Math.abs(lngDiff) > 0.0003) ew = lngDiff > 0 ? 'east' : 'west';\n    return [ns, ew].filter(Boolean).join('-') || 'very close';\n  };\n  const getColor = km => {\n    if (km <= WIN_THRESHOLD_KM) return 'green'; // within 500 ft\n    if (km <= 0.3) return 'orange'; // closer (0.3 km ~ 1000 ft)\n    if (km <= 1) return 'yellow'; // less far (<1 mi)\n    return 'red'; // far\n  };\n  const memoizedIcons = {};\n  const getIcon = color => {\n    if (memoizedIcons[color]) return memoizedIcons[color];\n    memoizedIcons[color] = L.divIcon({\n      className: 'custom-marker',\n      html: `<div style=\"background:${color};width:16px;height:16px;border-radius:50%;border:2px solid white\"></div>`\n    });\n    return memoizedIcons[color];\n  };\n  const formatDistance = km => {\n    const miles = km * 0.621371;\n    if (miles >= 1) return `${miles.toFixed(2)} miles`;\n    const feet = km * 3280.84;\n    return `${Math.round(feet)} ft`;\n  };\n  const handleMapClick = e => {\n    if (revealAnswer || guesses.length >= MAX_GUESSES) return;\n    setUserPosition(e.latlng);\n    // push will happen after distance received\n\n    if (currentLocation) {\n      fetch('http://localhost:5000/api/check-distance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          target_lat: currentLocation.lat,\n          target_lng: currentLocation.lng,\n          user_lat: e.latlng.lat,\n          user_lng: e.latlng.lng\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.distance <= WIN_THRESHOLD_KM) {\n          setDistance(data.distance);\n          setFeedback('Correct!');\n          setRevealAnswer(true);\n        } else if (guesses.length + 1 >= MAX_GUESSES) {\n          setDistance(data.distance);\n          setFeedback('Out of guesses! Revealing answer.');\n          setRevealAnswer(true);\n        } else {\n          const dir = directionFromGuess({\n            lat: currentLocation.lat,\n            lng: currentLocation.lng\n          }, e.latlng);\n          setFeedback(`Try a bit more ${dir}.`);\n        }\n      }).catch(err => console.error('Error checking distance:', err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Boston Location Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchNewLocation,\n        disabled: false,\n        children: gameStarted ? 'New Location' : 'Start Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), currentLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Find this location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentLocation.image,\n        alt: currentLocation.name,\n        referrerPolicy: \"no-referrer\",\n        style: {\n          maxWidth: '300px',\n          marginBottom: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on the map to guess the location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Guesses: ${guesses.length} / ${MAX_GUESSES}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [42.3601, -71.0589],\n      zoom: 13,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ClickHandler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), revealAnswer && currentLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [currentLocation.lat, currentLocation.lng],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: currentLocation.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), guesses.map((g, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: g.latlng,\n        icon: getIcon(getColor(g.distance)),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [`Guess #${idx + 1}`, revealAnswer && g.distance !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Distance: \", formatDistance(g.distance)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)), \")}\", revealAnswer && userPosition && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: [userPosition, [currentLocation.lat, currentLocation.lng]],\n        pathOptions: {\n          color: 'red',\n          dashArray: '6'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"distance-info\",\n      style: {\n        marginTop: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), revealAnswer && distance !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You were \", formatDistance(distance), \" away\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s2(Game, \"gLnRYLBvhcC0Fs4VW089frgbAM4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","Polyline","useMapEvents","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Game","_s2","_s","$RefreshSig$","currentLocation","setCurrentLocation","userPosition","setUserPosition","guesses","setGuesses","distance","setDistance","feedback","setFeedback","gameStarted","setGameStarted","revealAnswer","setRevealAnswer","ClickHandler","click","e","handleMapClick","fetchNewLocation","response","fetch","ok","Error","data","json","error","console","MAX_GUESSES","WIN_THRESHOLD_KM","directionFromGuess","target","guess","latDiff","lat","lngDiff","lng","ns","ew","Math","abs","filter","Boolean","join","getColor","km","memoizedIcons","getIcon","color","divIcon","className","html","formatDistance","miles","toFixed","feet","round","length","latlng","method","headers","body","JSON","stringify","target_lat","target_lng","user_lat","user_lng","then","res","dir","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","src","image","alt","name","referrerPolicy","style","maxWidth","marginBottom","center","zoom","height","width","url","attribution","position","map","g","idx","icon","undefined","positions","pathOptions","dashArray","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/salig/OneDrive/Documents/CascadeProjects/windsurf-project/boston-location-game/src/components/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n\n// Remove the default icon warning\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst Game = () => {\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [userPosition, setUserPosition] = useState(null); // last guess\n  const [guesses, setGuesses] = useState([]); // {latlng, distance}\n\n  const [distance, setDistance] = useState(null);\n  \n  const [feedback, setFeedback] = useState(''); // textual hint\n  const [gameStarted, setGameStarted] = useState(false);\n  const [revealAnswer, setRevealAnswer] = useState(false);\n\n  const ClickHandler = () => {\n    useMapEvents({\n      click: (e) => {\n        if (!revealAnswer) {\n          handleMapClick(e);\n        }\n      },\n    });\n    return null;\n  };\n\n  const fetchNewLocation = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/get-location');\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setCurrentLocation(data);\n      setGameStarted(true);\n      setUserPosition(null);\n      setGuesses([]);\n      setFeedback('');\n      setDistance(null);\n      setRevealAnswer(false);\n    } catch (error) {\n      console.error('Error fetching location:', error);\n    }\n  };\n\n  const MAX_GUESSES = 5;\n  const WIN_THRESHOLD_KM = 0.1524; // 500 ft â‰ˆ 0.1524 km\n\n  const directionFromGuess = (target, guess) => {\n    const latDiff = target.lat - guess.lat;\n    const lngDiff = target.lng - guess.lng;\n    let ns = '', ew = '';\n    if (Math.abs(latDiff) > 0.0003) ns = latDiff > 0 ? 'north' : 'south';\n    if (Math.abs(lngDiff) > 0.0003) ew = lngDiff > 0 ? 'east' : 'west';\n    return [ns, ew].filter(Boolean).join('-') || 'very close';\n  };\n\n  const getColor = (km) => {\n    if (km <= WIN_THRESHOLD_KM) return 'green'; // within 500 ft\n    if (km <= 0.3) return 'orange'; // closer (0.3 km ~ 1000 ft)\n    if (km <= 1) return 'yellow'; // less far (<1 mi)\n    return 'red'; // far\n  };\n\n  const memoizedIcons = {};\n  const getIcon = (color) => {\n    if (memoizedIcons[color]) return memoizedIcons[color];\n    memoizedIcons[color] = L.divIcon({\n      className: 'custom-marker',\n      html: `<div style=\"background:${color};width:16px;height:16px;border-radius:50%;border:2px solid white\"></div>`\n    });\n    return memoizedIcons[color];\n  };\n\n  const formatDistance = (km) => {\n    const miles = km * 0.621371;\n    if (miles >= 1) return `${miles.toFixed(2)} miles`;\n    const feet = km * 3280.84;\n    return `${Math.round(feet)} ft`;\n  };\n\n  const handleMapClick = (e) => {\n    if (revealAnswer || guesses.length >= MAX_GUESSES) return;\n    setUserPosition(e.latlng);\n    // push will happen after distance received\n    \n    if (currentLocation) {\n            fetch('http://localhost:5000/api/check-distance', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          target_lat: currentLocation.lat,\n          target_lng: currentLocation.lng,\n          user_lat: e.latlng.lat,\n          user_lng: e.latlng.lng\n        })\n      })\n      .then(res => res.json())\n      .then(data => {\n        if (data.distance <= WIN_THRESHOLD_KM) {\n          setDistance(data.distance);\n          setFeedback('Correct!');\n          setRevealAnswer(true);\n        } else if (guesses.length + 1 >= MAX_GUESSES) {\n          setDistance(data.distance);\n          setFeedback('Out of guesses! Revealing answer.');\n          setRevealAnswer(true);\n        } else {\n          const dir = directionFromGuess({ lat: currentLocation.lat, lng: currentLocation.lng }, e.latlng);\n          setFeedback(`Try a bit more ${dir}.`);\n        }\n      })\n      .catch(err => console.error('Error checking distance:', err));\n\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-header\">\n        <h1>Boston Location Game</h1>\n        <button onClick={fetchNewLocation} disabled={false}>\n          {gameStarted ? 'New Location' : 'Start Game'}\n        </button>\n      </div>\n\n      {currentLocation && (\n        <div className=\"location-info\">\n          <h2>Find this location:</h2>\n          <img \n            src={currentLocation.image} \n            alt={currentLocation.name}\n            referrerPolicy=\"no-referrer\"\n            style={{ maxWidth: '300px', marginBottom: '20px' }}\n          />\n          <p>Click on the map to guess the location</p>\n          <p>{`Guesses: ${guesses.length} / ${MAX_GUESSES}`}</p>\n        </div>\n      )}\n\n      <MapContainer \n        center={[42.3601, -71.0589]} \n        zoom={13}\n        style={{ height: '600px', width: '100%' }}\n      >\n        <ClickHandler />\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        \n        {revealAnswer && currentLocation && (\n          <Marker position={[currentLocation.lat, currentLocation.lng]}>\n            <Popup>\n              {currentLocation.name}\n            </Popup>\n          </Marker>\n        )}\n\n        {guesses.map((g, idx) => (\n          <Marker key={idx} position={g.latlng} icon={getIcon(getColor(g.distance))}>\n            <Popup>\n              {`Guess #${idx + 1}`}\n              {revealAnswer && g.distance !== undefined && (\n                <p>Distance: {formatDistance(g.distance)}</p>\n              )}\n            </Popup>\n          </Marker>\n        ))}\n\n        )}\n\n        {/* dashed line after game ends */}\n        {revealAnswer && userPosition && (\n          <Polyline\n            positions={[userPosition, [currentLocation.lat, currentLocation.lng]]}\n            pathOptions={{ color: 'red', dashArray: '6' }}\n          />\n        )}\n      </MapContainer>\n\n      {feedback && (\n        <div className=\"distance-info\" style={{ marginTop: '15px' }}>\n          <h3>{feedback}</h3>\n          {revealAnswer && distance !== null && <p>You were {formatDistance(distance)} away</p>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}